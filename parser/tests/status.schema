interface BasicStatus {
    Name: String!
    Address: String!
    Port: String!
    StatusCode: Int
    configtype: String!
    configversion: String!
    deploytag: String!
    revision: String!
}

type Service implements BasicStatus {
    Name: String!
    Address: String!
    Port: String!
    StatusCode: Int
    configtype: String!
    configversion: String!
    deploytag: String!
    revision: String!
    requests: RequestType
    errors: ErrorType
    uptime: String
    starttime: String
}

type RequestType {
    count: Int
    last5min: Int
    lasthour: Int
}

type ErrorType {
    server: Int
    user: Int
}

enum Deploy { DEV, STAGING, PROD }

type DeployStatus {
    Services: [Service]
}

type Query {
    status: [Service]
#    statusAll($deploy: Deploy): DeployStatus
#    statusAll($deploy: Deploy): DeployStatus
#    statusOne($deploy: Deploy, $name: String): Service
#    compare($name: String): [Service]
}